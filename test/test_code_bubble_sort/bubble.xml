<Module>
  <!-- ; ModuleID = 'test/test_code_bubble_sort/bubble.bc' -->
  <!-- source_filename = " test/test_code_bubble_sort/bubble.c  "-->
  <!-- target datalayout = "e-p:32:32-i64:64-v16:16-v32:32-n16:32:64" -->
  <!-- target triple = "nvptx" -->
  <Globals>
    <Variable name="N" Vtype="global" type="[20 x i32]" init="[i32 23002, i32 13359, i32 11466, i32 64118, i32 32403, i32 44024, i32 63253, i32 51654, i32 60960, i32 45232, i32 28137, i32 40242, i32 27545, i32 10747, i32 18543, i32 32541, i32 9632, i32 59878, i32 43528, i32 6841]" align="4" />
    <Variable name="len" Vtype="global" type="i32" init="20" align="4" />
  </Globals>

  <!-- Function Attrs: norecurse nounwind -->
  <Function linkage="" mode="define" returnType="i32" name="main">
    <Arguments number="0">
    </Arguments>
    <BasicBlocks>
      <BasicBlock name="entry">
        <Instruction des="r-0" opName="load" loadType="i32" type="i32*" operands="len" />
        <Instruction des="cmp31" opName="icmp_sgt" type="i32" operands="r-0,0" />
        <Instruction opName="br" operands="[i1]cmp31, [label]for.cond1.preheader.preheader, [label]for.end14" />
      </BasicBlock>
      <BasicBlock name="for.cond1.preheader.preheader">
        <Instruction des="j.027" opName="add" type="i32" operands="r-0,-1" />
        <Instruction des="r-1" opName="add" type="i32" operands="r-0,-2" />
        <Instruction des="arrayidx.prol" opName="getelementptr" type="[20 x i32]" operands="[[20 x i32]*]N,[i32]0,[i32]j.027" />
        <Instruction des="sub4.prol" opName="add" type="i32" operands="r-0,-2" />
        <Instruction des="arrayidx5.prol" opName="getelementptr" type="[20 x i32]" operands="[[20 x i32]*]N,[i32]0,[i32]sub4.prol" />
        <Instruction des="j.0.prol" opName="add" type="i32" operands="r-0,-2" />
        <Instruction opName="br" type="label" operands="for.cond1.preheader" />
      </BasicBlock>
      <BasicBlock name="for.cond1.preheader">
        <Instruction des="i.032" opName="phi" type="i32" values="[inc:for.inc13],[0:for.cond1.preheader.preheader]" />
        <Instruction des="cmp228" opName="icmp_sgt" type="i32" operands="j.027,i.032" />
        <Instruction opName="br" operands="[i1]cmp228, [label]for.body3.preheader, [label]for.inc13" />
      </BasicBlock>
      <BasicBlock name="for.body3.preheader">
        <Instruction des="r-2" opName="sub" type="i32" operands="j.027,i.032" />
        <Instruction des="xtraiter" opName="and" type="i32" operands="r-2,1" />
        <Instruction des="lcmp.mod" opName="icmp_eq" type="i32" operands="xtraiter,0" />
        <Instruction opName="br" operands="[i1]lcmp.mod, [label]for.body3.prol.loopexit.unr-lcssa, [label]for.body3.prol.preheader" />
      </BasicBlock>
      <BasicBlock name="for.body3.prol.preheader">
        <Instruction opName="br" type="label" operands="for.body3.prol" />
      </BasicBlock>
      <BasicBlock name="for.body3.prol">
        <Instruction des="r-3" opName="load" loadType="i32" type="i32*" operands="arrayidx.prol" />
        <Instruction des="r-4" opName="load" loadType="i32" type="i32*" operands="arrayidx5.prol" />
        <Instruction des="cmp6.prol" opName="icmp_slt" type="i32" operands="r-3,r-4" />
        <Instruction opName="br" operands="[i1]cmp6.prol, [label]if.then.prol, [label]for.cond1.backedge.prol" />
      </BasicBlock>
      <BasicBlock name="if.then.prol">
        <Instruction opName="store" operands="[i32]r-4,[i32*]arrayidx.prol" />
        <Instruction opName="store" operands="[i32]r-3,[i32*]arrayidx5.prol" />
        <Instruction opName="br" type="label" operands="for.cond1.backedge.prol" />
      </BasicBlock>
      <BasicBlock name="for.cond1.backedge.prol">
        <Instruction opName="br" type="label" operands="for.body3.prol.loopexit.unr-lcssa" />
      </BasicBlock>
      <BasicBlock name="for.body3.prol.loopexit.unr-lcssa">
        <Instruction des="j.030.unr.ph" opName="phi" type="i32" values="[j.0.prol:for.cond1.backedge.prol],[j.027:for.body3.preheader]" />
        <Instruction des="j.0.in29.unr.ph" opName="phi" type="i32" values="[j.027:for.cond1.backedge.prol],[r-0:for.body3.preheader]" />
        <Instruction opName="br" type="label" operands="for.body3.prol.loopexit" />
      </BasicBlock>
      <BasicBlock name="for.body3.prol.loopexit">
        <Instruction des="r-5" opName="icmp_eq" type="i32" operands="r-1,i.032" />
        <Instruction opName="br" operands="[i1]r-5, [label]for.inc13.loopexit, [label]for.body3.preheader.new" />
      </BasicBlock>
      <BasicBlock name="for.body3.preheader.new">
        <Instruction opName="br" type="label" operands="for.body3" />
      </BasicBlock>
      <BasicBlock name="for.body3">
        <Instruction des="j.030" opName="phi" type="i32" values="[j.030.unr.ph:for.body3.preheader.new],[j.0.1:for.cond1.backedge.1]" />
        <Instruction des="j.0.in29" opName="phi" type="i32" values="[j.0.in29.unr.ph:for.body3.preheader.new],[j.0:for.cond1.backedge.1]" />
        <Instruction des="arrayidx" opName="getelementptr" type="[20 x i32]" operands="[[20 x i32]*]N,[i32]0,[i32]j.030" />
        <Instruction des="r-6" opName="load" loadType="i32" type="i32*" operands="arrayidx" />
        <Instruction des="sub4" opName="add" type="i32" operands="j.0.in29,-2" />
        <Instruction des="arrayidx5" opName="getelementptr" type="[20 x i32]" operands="[[20 x i32]*]N,[i32]0,[i32]sub4" />
        <Instruction des="r-7" opName="load" loadType="i32" type="i32*" operands="arrayidx5" />
        <Instruction des="cmp6" opName="icmp_slt" type="i32" operands="r-6,r-7" />
        <Instruction opName="br" operands="[i1]cmp6, [label]if.then, [label]for.cond1.backedge" />
      </BasicBlock>
      <BasicBlock name="for.cond1.backedge">
        <Instruction des="j.0" opName="add" type="i32" operands="j.030,-1" />
        <Instruction des="arrayidx.1" opName="getelementptr" type="[20 x i32]" operands="[[20 x i32]*]N,[i32]0,[i32]j.0" />
        <Instruction des="r-8" opName="load" loadType="i32" type="i32*" operands="arrayidx.1" />
        <Instruction des="sub4.1" opName="add" type="i32" operands="j.030,-2" />
        <Instruction des="arrayidx5.1" opName="getelementptr" type="[20 x i32]" operands="[[20 x i32]*]N,[i32]0,[i32]sub4.1" />
        <Instruction des="r-9" opName="load" loadType="i32" type="i32*" operands="arrayidx5.1" />
        <Instruction des="cmp6.1" opName="icmp_slt" type="i32" operands="r-8,r-9" />
        <Instruction opName="br" operands="[i1]cmp6.1, [label]if.then.1, [label]for.cond1.backedge.1" />
      </BasicBlock>
      <BasicBlock name="if.then">
        <Instruction opName="store" operands="[i32]r-7,[i32*]arrayidx" />
        <Instruction opName="store" operands="[i32]r-6,[i32*]arrayidx5" />
        <Instruction opName="br" type="label" operands="for.cond1.backedge" />
      </BasicBlock>
      <BasicBlock name="for.inc13.loopexit.unr-lcssa">
        <Instruction opName="br" type="label" operands="for.inc13.loopexit" />
      </BasicBlock>
      <BasicBlock name="for.inc13.loopexit">
        <Instruction opName="br" type="label" operands="for.inc13" />
      </BasicBlock>
      <BasicBlock name="for.inc13">
        <Instruction des="inc" opName="add" type="i32" operands="i.032,1" />
        <Instruction des="cmp" opName="icmp_slt" type="i32" operands="inc,r-0" />
        <Instruction opName="br" operands="[i1]cmp, [label]for.cond1.preheader, [label]for.end14.loopexit" />
      </BasicBlock>
      <BasicBlock name="for.end14.loopexit">
        <Instruction opName="br" type="label" operands="for.end14" />
      </BasicBlock>
      <BasicBlock name="for.end14">
        <Instruction opName="ret" operands="[i32]0" />
      </BasicBlock>
      <BasicBlock name="if.then.1">
        <Instruction opName="store" operands="[i32]r-9,[i32*]arrayidx.1" />
        <Instruction opName="store" operands="[i32]r-8,[i32*]arrayidx5.1" />
        <Instruction opName="br" type="label" operands="for.cond1.backedge.1" />
      </BasicBlock>
      <BasicBlock name="for.cond1.backedge.1">
        <Instruction des="j.0.1" opName="add" type="i32" operands="j.030,-2" />
        <Instruction des="cmp2.1" opName="icmp_sgt" type="i32" operands="j.0.1,i.032" />
        <Instruction opName="br" operands="[i1]cmp2.1, [label]for.body3, [label]for.inc13.loopexit.unr-lcssa" />
      </BasicBlock>
    </BasicBlocks>
  </Function>
</Module>