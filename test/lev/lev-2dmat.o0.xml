<Module>
  <!-- ; ModuleID = 'lev-2dmat.o0.bc' -->
  <!-- source_filename = " lev-2dmat.c  "-->
  <!-- target datalayout = "E-m:e-p:32:32-i64:64-n32" -->
  <!-- target triple = "ppc32" -->
  <Globals>
    <Variable name="data" Vtype="global" type="[129 x [129 x i32]]" init="zeroinitializer" align="4" />
    <Variable name="main.str1" Vtype="constant" type="[128 x i8]" init="c"kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  kitten  "" align="1" />
    <Variable name="main.str2" Vtype="constant" type="[128 x i8]" init="c"sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting sitting "" align="1" />
  </Globals>

  <!-- Function Attrs: noinline nounwind -->
  <Function linkage="" mode="define" returnType="i32" name="main">
    <Arguments number="0">
    </Arguments>
    <BasicBlocks>
      <BasicBlock name="entry">
        <Instruction des="retval" opName="alloca"  allocaType="i32" align="4" />
        <Instruction des="i" opName="alloca"  allocaType="i32" align="4" />
        <Instruction des="j" opName="alloca"  allocaType="i32" align="4" />
        <Instruction des="size" opName="alloca"  allocaType="i32" align="4" />
        <Instruction des="str1" opName="alloca"  allocaType="[128 x i8]" align="1" />
        <Instruction des="str2" opName="alloca"  allocaType="[128 x i8]" align="1" />
        <Instruction des="left" opName="alloca"  allocaType="i32" align="4" />
        <Instruction des="left_top" opName="alloca"  allocaType="i32" align="4" />
        <Instruction des="temp" opName="alloca"  allocaType="i32" align="4" />
        <Instruction opName="store" operands="[i32]0,[i32*]retval" />
        <Instruction opName="store" operands="[i32]0,[i32*]i" />
        <Instruction opName="store" operands="[i32]0,[i32*]j" />
        <Instruction opName="store" operands="[i32]128,[i32*]size" />
        <Instruction des="r-0" opName="bitcast" [[128 x i8]*]str1 to i8* />
        <Instruction opName="call" functionType="void" operands="llvm.memcpy.p0i8.p0i8.i32, [i8*]r-0, [i8*]getelementptr ([128 x i8], [128 x i8]* main.str1, i32 0, i32 0), [i32]128, [i32]1, [i1]false" />
        <Instruction des="r-1" opName="bitcast" [[128 x i8]*]str2 to i8* />
        <Instruction opName="call" functionType="void" operands="llvm.memcpy.p0i8.p0i8.i32, [i8*]r-1, [i8*]getelementptr ([128 x i8], [128 x i8]* main.str2, i32 0, i32 0), [i32]128, [i32]1, [i1]false" />
        <Instruction opName="store" operands="[i32]0,[i32*]left" />
        <Instruction opName="store" operands="[i32]0,[i32*]left_top" />
        <Instruction opName="store" operands="[i32]0,[i32*]i" />
        <Instruction opName="br" type="label" operands="for.cond" />
      </BasicBlock>
      <BasicBlock name="for.cond">
        <Instruction des="r-2" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="r-3" opName="load" loadType="i32" type="i32*" operands="size" />
        <Instruction des="cmp" opName="icmp_sle" type="i32" operands="r-2,r-3" />
        <Instruction opName="br" operands="[i1]cmp, [label]for.body, [label]for.end" />
      </BasicBlock>
      <BasicBlock name="for.body">
        <Instruction des="r-4" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="r-5" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="arrayidx" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]r-5" />
        <Instruction des="arrayidx1" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx,[i32]0,[i32]0" />
        <Instruction opName="store" operands="[i32]r-4,[i32*]arrayidx1" />
        <Instruction des="r-6" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="r-7" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="arrayidx2" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]getelementptr ([129 x [129 x i32]], [129 x [129 x i32]]* data, i32 0, i32 0),[i32]0,[i32]r-7" />
        <Instruction opName="store" operands="[i32]r-6,[i32*]arrayidx2" />
        <Instruction opName="br" type="label" operands="for.inc" />
      </BasicBlock>
      <BasicBlock name="for.inc">
        <Instruction des="r-8" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="inc" opName="add" type="i32" operands="r-8,1" />
        <Instruction opName="store" operands="[i32]inc,[i32*]i" />
        <Instruction opName="br" type="label" operands="for.cond" />
      </BasicBlock>
      <BasicBlock name="for.end">
        <Instruction opName="store" operands="[i32]1,[i32*]i" />
        <Instruction opName="br" type="label" operands="for.cond3" />
      </BasicBlock>
      <BasicBlock name="for.cond3">
        <Instruction des="r-9" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="r-10" opName="load" loadType="i32" type="i32*" operands="size" />
        <Instruction des="cmp4" opName="icmp_sle" type="i32" operands="r-9,r-10" />
        <Instruction opName="br" operands="[i1]cmp4, [label]for.body5, [label]for.end106" />
      </BasicBlock>
      <BasicBlock name="for.body5">
        <Instruction opName="store" operands="[i32]1,[i32*]j" />
        <Instruction opName="br" type="label" operands="for.cond6" />
      </BasicBlock>
      <BasicBlock name="for.cond6">
        <Instruction des="r-11" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="r-12" opName="load" loadType="i32" type="i32*" operands="size" />
        <Instruction des="cmp7" opName="icmp_sle" type="i32" operands="r-11,r-12" />
        <Instruction opName="br" operands="[i1]cmp7, [label]for.body8, [label]for.end103" />
      </BasicBlock>
      <BasicBlock name="for.body8">
        <Instruction des="r-13" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub" opName="sub" type="i32" operands="r-13,1" />
        <Instruction des="arrayidx9" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub" />
        <Instruction des="r-14" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="arrayidx10" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx9,[i32]0,[i32]r-14" />
        <Instruction des="r-15" opName="load" loadType="i32" type="i32*" operands="arrayidx10" />
        <Instruction des="add" opName="add" type="i32" operands="r-15,1" />
        <Instruction des="r-16" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="arrayidx11" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]r-16" />
        <Instruction des="r-17" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub12" opName="sub" type="i32" operands="r-17,1" />
        <Instruction des="arrayidx13" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx11,[i32]0,[i32]sub12" />
        <Instruction des="r-18" opName="load" loadType="i32" type="i32*" operands="arrayidx13" />
        <Instruction des="add14" opName="add" type="i32" operands="r-18,1" />
        <Instruction des="cmp15" opName="icmp_slt" type="i32" operands="add,add14" />
        <Instruction opName="br" operands="[i1]cmp15, [label]cond.true, [label]cond.false54" />
      </BasicBlock>
      <BasicBlock name="cond.true">
        <Instruction des="r-19" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub16" opName="sub" type="i32" operands="r-19,1" />
        <Instruction des="arrayidx17" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub16" />
        <Instruction des="r-20" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="arrayidx18" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx17,[i32]0,[i32]r-20" />
        <Instruction des="r-21" opName="load" loadType="i32" type="i32*" operands="arrayidx18" />
        <Instruction des="add19" opName="add" type="i32" operands="r-21,1" />
        <Instruction des="r-22" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub20" opName="sub" type="i32" operands="r-22,1" />
        <Instruction des="arrayidx21" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub20" />
        <Instruction des="r-23" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub22" opName="sub" type="i32" operands="r-23,1" />
        <Instruction des="arrayidx23" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx21,[i32]0,[i32]sub22" />
        <Instruction des="r-24" opName="load" loadType="i32" type="i32*" operands="arrayidx23" />
        <Instruction des="r-25" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub24" opName="sub" type="i32" operands="r-25,1" />
        <Instruction des="arrayidx25" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str1,[i32]0,[i32]sub24" />
        <Instruction des="r-26" opName="load" loadType="i8" type="i8*" operands="arrayidx25" />
        <Instruction des="conv" opName="zext" [i8]r-26 to i32 />
        <Instruction des="r-27" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub26" opName="sub" type="i32" operands="r-27,1" />
        <Instruction des="arrayidx27" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str2,[i32]0,[i32]sub26" />
        <Instruction des="r-28" opName="load" loadType="i8" type="i8*" operands="arrayidx27" />
        <Instruction des="conv28" opName="zext" [i8]r-28 to i32 />
        <Instruction des="cmp29" opName="icmp_eq" type="i32" operands="conv,conv28" />
        <Instruction des="cond" opName="select" operands="[i1]cmp29,[i32]0,[i32]1" />
        <Instruction des="add31" opName="add" type="i32" operands="r-24,cond" />
        <Instruction des="cmp32" opName="icmp_slt" type="i32" operands="add19,add31" />
        <Instruction opName="br" operands="[i1]cmp32, [label]cond.true34, [label]cond.false" />
      </BasicBlock>
      <BasicBlock name="cond.true34">
        <Instruction des="r-29" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub35" opName="sub" type="i32" operands="r-29,1" />
        <Instruction des="arrayidx36" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub35" />
        <Instruction des="r-30" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="arrayidx37" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx36,[i32]0,[i32]r-30" />
        <Instruction des="r-31" opName="load" loadType="i32" type="i32*" operands="arrayidx37" />
        <Instruction des="add38" opName="add" type="i32" operands="r-31,1" />
        <Instruction opName="br" type="label" operands="cond.end" />
      </BasicBlock>
      <BasicBlock name="cond.false">
        <Instruction des="r-32" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub39" opName="sub" type="i32" operands="r-32,1" />
        <Instruction des="arrayidx40" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub39" />
        <Instruction des="r-33" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub41" opName="sub" type="i32" operands="r-33,1" />
        <Instruction des="arrayidx42" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx40,[i32]0,[i32]sub41" />
        <Instruction des="r-34" opName="load" loadType="i32" type="i32*" operands="arrayidx42" />
        <Instruction des="r-35" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub43" opName="sub" type="i32" operands="r-35,1" />
        <Instruction des="arrayidx44" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str1,[i32]0,[i32]sub43" />
        <Instruction des="r-36" opName="load" loadType="i8" type="i8*" operands="arrayidx44" />
        <Instruction des="conv45" opName="zext" [i8]r-36 to i32 />
        <Instruction des="r-37" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub46" opName="sub" type="i32" operands="r-37,1" />
        <Instruction des="arrayidx47" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str2,[i32]0,[i32]sub46" />
        <Instruction des="r-38" opName="load" loadType="i8" type="i8*" operands="arrayidx47" />
        <Instruction des="conv48" opName="zext" [i8]r-38 to i32 />
        <Instruction des="cmp49" opName="icmp_eq" type="i32" operands="conv45,conv48" />
        <Instruction des="cond51" opName="select" operands="[i1]cmp49,[i32]0,[i32]1" />
        <Instruction des="add52" opName="add" type="i32" operands="r-34,cond51" />
        <Instruction opName="br" type="label" operands="cond.end" />
      </BasicBlock>
      <BasicBlock name="cond.end">
        <Instruction des="cond53" opName="phi" type="i32" values="[add38:cond.true34],[add52:cond.false]" />
        <Instruction opName="br" type="label" operands="cond.end97" />
      </BasicBlock>
      <BasicBlock name="cond.false54">
        <Instruction des="r-39" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="arrayidx55" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]r-39" />
        <Instruction des="r-40" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub56" opName="sub" type="i32" operands="r-40,1" />
        <Instruction des="arrayidx57" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx55,[i32]0,[i32]sub56" />
        <Instruction des="r-41" opName="load" loadType="i32" type="i32*" operands="arrayidx57" />
        <Instruction des="add58" opName="add" type="i32" operands="r-41,1" />
        <Instruction des="r-42" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub59" opName="sub" type="i32" operands="r-42,1" />
        <Instruction des="arrayidx60" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub59" />
        <Instruction des="r-43" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub61" opName="sub" type="i32" operands="r-43,1" />
        <Instruction des="arrayidx62" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx60,[i32]0,[i32]sub61" />
        <Instruction des="r-44" opName="load" loadType="i32" type="i32*" operands="arrayidx62" />
        <Instruction des="r-45" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub63" opName="sub" type="i32" operands="r-45,1" />
        <Instruction des="arrayidx64" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str1,[i32]0,[i32]sub63" />
        <Instruction des="r-46" opName="load" loadType="i8" type="i8*" operands="arrayidx64" />
        <Instruction des="conv65" opName="zext" [i8]r-46 to i32 />
        <Instruction des="r-47" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub66" opName="sub" type="i32" operands="r-47,1" />
        <Instruction des="arrayidx67" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str2,[i32]0,[i32]sub66" />
        <Instruction des="r-48" opName="load" loadType="i8" type="i8*" operands="arrayidx67" />
        <Instruction des="conv68" opName="zext" [i8]r-48 to i32 />
        <Instruction des="cmp69" opName="icmp_eq" type="i32" operands="conv65,conv68" />
        <Instruction des="cond71" opName="select" operands="[i1]cmp69,[i32]0,[i32]1" />
        <Instruction des="add72" opName="add" type="i32" operands="r-44,cond71" />
        <Instruction des="cmp73" opName="icmp_slt" type="i32" operands="add58,add72" />
        <Instruction opName="br" operands="[i1]cmp73, [label]cond.true75, [label]cond.false80" />
      </BasicBlock>
      <BasicBlock name="cond.true75">
        <Instruction des="r-49" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="arrayidx76" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]r-49" />
        <Instruction des="r-50" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub77" opName="sub" type="i32" operands="r-50,1" />
        <Instruction des="arrayidx78" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx76,[i32]0,[i32]sub77" />
        <Instruction des="r-51" opName="load" loadType="i32" type="i32*" operands="arrayidx78" />
        <Instruction des="add79" opName="add" type="i32" operands="r-51,1" />
        <Instruction opName="br" type="label" operands="cond.end95" />
      </BasicBlock>
      <BasicBlock name="cond.false80">
        <Instruction des="r-52" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub81" opName="sub" type="i32" operands="r-52,1" />
        <Instruction des="arrayidx82" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]sub81" />
        <Instruction des="r-53" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub83" opName="sub" type="i32" operands="r-53,1" />
        <Instruction des="arrayidx84" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx82,[i32]0,[i32]sub83" />
        <Instruction des="r-54" opName="load" loadType="i32" type="i32*" operands="arrayidx84" />
        <Instruction des="r-55" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="sub85" opName="sub" type="i32" operands="r-55,1" />
        <Instruction des="arrayidx86" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str1,[i32]0,[i32]sub85" />
        <Instruction des="r-56" opName="load" loadType="i8" type="i8*" operands="arrayidx86" />
        <Instruction des="conv87" opName="zext" [i8]r-56 to i32 />
        <Instruction des="r-57" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="sub88" opName="sub" type="i32" operands="r-57,1" />
        <Instruction des="arrayidx89" opName="getelementptr" type="[128 x i8]" operands="[[128 x i8]*]str2,[i32]0,[i32]sub88" />
        <Instruction des="r-58" opName="load" loadType="i8" type="i8*" operands="arrayidx89" />
        <Instruction des="conv90" opName="zext" [i8]r-58 to i32 />
        <Instruction des="cmp91" opName="icmp_eq" type="i32" operands="conv87,conv90" />
        <Instruction des="cond93" opName="select" operands="[i1]cmp91,[i32]0,[i32]1" />
        <Instruction des="add94" opName="add" type="i32" operands="r-54,cond93" />
        <Instruction opName="br" type="label" operands="cond.end95" />
      </BasicBlock>
      <BasicBlock name="cond.end95">
        <Instruction des="cond96" opName="phi" type="i32" values="[add79:cond.true75],[add94:cond.false80]" />
        <Instruction opName="br" type="label" operands="cond.end97" />
      </BasicBlock>
      <BasicBlock name="cond.end97">
        <Instruction des="cond98" opName="phi" type="i32" values="[cond53:cond.end],[cond96:cond.end95]" />
        <Instruction des="r-59" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="arrayidx99" opName="getelementptr" type="[129 x [129 x i32]]" operands="[[129 x [129 x i32]]*]data,[i32]0,[i32]r-59" />
        <Instruction des="r-60" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="arrayidx100" opName="getelementptr" type="[129 x i32]" operands="[[129 x i32]*]arrayidx99,[i32]0,[i32]r-60" />
        <Instruction opName="store" operands="[i32]cond98,[i32*]arrayidx100" />
        <Instruction opName="br" type="label" operands="for.inc101" />
      </BasicBlock>
      <BasicBlock name="for.inc101">
        <Instruction des="r-61" opName="load" loadType="i32" type="i32*" operands="j" />
        <Instruction des="inc102" opName="add" type="i32" operands="r-61,1" />
        <Instruction opName="store" operands="[i32]inc102,[i32*]j" />
        <Instruction opName="br" type="label" operands="for.cond6" />
      </BasicBlock>
      <BasicBlock name="for.end103">
        <Instruction opName="br" type="label" operands="for.inc104" />
      </BasicBlock>
      <BasicBlock name="for.inc104">
        <Instruction des="r-62" opName="load" loadType="i32" type="i32*" operands="i" />
        <Instruction des="inc105" opName="add" type="i32" operands="r-62,1" />
        <Instruction opName="store" operands="[i32]inc105,[i32*]i" />
        <Instruction opName="br" type="label" operands="for.cond3" />
      </BasicBlock>
      <BasicBlock name="for.end106">
        <Instruction opName="ret" operands="[i32]0" />
      </BasicBlock>
    </BasicBlocks>
  </Function>

  <!-- Function Attrs: argmemonly nounwind -->
  <Function linkage="" mode="declare"  returnType="void" name="llvm.memcpy.p0i8.p0i8.i32">
    <Arguments number="5">
    </Arguments>

  </Function>
</Module>