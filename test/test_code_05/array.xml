<Module>
  <!-- ; ModuleID = 'test/test_code_05/array.bc' -->
  <!-- source_filename = " test/test_code_05/array.c  "-->
  <!-- target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128" -->
  <!-- target triple = "x86_64-unknown-linux-gnu" -->

arr.array = private unnamed_addr constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16

  <!-- Function Attrs: norecurse nounwind readnone uwtable -->
  <Function linkage="" mode="define" returnType="i32" name="arr">
    <Arguments number="1">
      <Arg type="i32" name="i"/>
    </Arguments>
    <BasicBlocks>
      <BasicBLock name="entry">
        <Instruction des="idxprom" opName="sext" [i32]i to i64 />
        <Instruction des="arrayidx" opName="getelementptr" inbounds [10 x i32], operands="[[10 x i32]*]arr.array,[i64]0,[i64]idxprom" />
        <Instruction des="r-0" opName="load" loadType="i32" type="i32*" operands="arrayidx", !tbaa !1 />
        <Instruction opName="ret" operands="[i32]r-0" />
      </BasicBlock>
    </BasicBlocks>
  </Function>

  <!-- Function Attrs: norecurse nounwind readnone uwtable -->
  <Function linkage="" mode="define" returnType="i32" name="main">
    <Arguments number="0">
    </Arguments>
    <BasicBlocks>
      <BasicBLock name="entry">
        <Instruction opName="ret" operands="[i32]5" />
      </BasicBlock>
    </BasicBlocks>
  </Function>
</Module>